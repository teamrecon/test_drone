#include <stdio.h>
#include <stdlib.h>
#include <vector>
#include <iostream>
 
#include "ros/ros.h"
 
#include "std_msgs/MultiArrayLayout.h"
#include "std_msgs/MultiArrayDimension.h"
#include "std_msgs/Int32MultiArray.h"

int Arr[10];



void arrayCallback(const std_msgs::Int32MultiArray::ConstPtr& array)
{
 
	int i = 0;
	// print all the remaining numbers
	for(std::vector<int>::const_iterator it = array->data.begin(); it != array->data.end(); ++it)
	{
		Arr[i] = *it;
		i++;
		std::cout << Arr[i];
	}
 
	return;
}

int main(int argc , char **argv)
{
 ros::init(argc,argv,"collision_avoidance"); 
 ros::NodeHandle n;
 ros::Subscriber sub3 = n.subscribe("sonar_vals", 10, arrayCallback);
 std::cout << "Initialized....";
 int count =0;
 ros::spin();
 return 0;
}
